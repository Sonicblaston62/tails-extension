<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="E%P0mr`pA@gRCutL`/gm">mySprite</variable><variable type="KIND_SpriteKind" id="Hz`DWnzx|)ry%DyF5#gb">Player</variable><variable type="KIND_SpriteKind" id="-y$kj3:N}[cbU%8O!#{i">Projectile</variable><variable type="KIND_SpriteKind" id="1?[EBJPw{5b/z(d@ji*V">Food</variable><variable type="KIND_SpriteKind" id="vI0H3}CWyGFG3^ujW:6P">Enemy</variable></variables><block type="pxt-on-start" id="]#{@e_j!g/T.+d:jH3f3" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="^o0SD0|H,eA@ty7?A^|/" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace trailEffect {" line1="    //% blockId=trail_create block=&quot;create trail for %Follow=variables_get(mySprite) with image %Image2=screen_image_picker speed %Speed and %Amount trails&quot;" line2="    //% Speed.defl=100 Amount.defl=10 Amount.min=1 Amount.max=20" line3="    //% group=&quot;Effects&quot;" line4="    export function createTrail(Follow: Sprite, Image2: Image, Speed: number, Amount: number) {" line5="        Follow.z = 100" line6="        let trailSprites: Sprite[] = []" line7="        let scaleFactor = -0.05" line8="" line9="        for (let i = 0; i &lt; Amount; i++) {" line10="            let trail = sprites.create(Image2, SpriteKind.create())" line11="            trail.changeScale(scaleFactor * i, ScaleAnchor.Middle)" line12="            trail.z = 100 - (i + 1) * 5" line13="            trailSprites.push(trail)" line14="        }" line15="" line16="        if (Speed &gt; 0) {" line17="            // If speed &gt; 0, make the trail follow" line18="            trailSprites[0].follow(Follow, Speed)" line19="            for (let j = 1; j &lt; trailSprites.length; j++) {" line20="                trailSprites[j].follow(trailSprites[j - 1], Speed)" line21="            }" line22="        } else {" line23="            // If speed is 0, position them manually instead" line24="            for (let k = 0; k &lt; trailSprites.length; k++) {" line25="                trailSprites[k].setPosition(Follow.x - (k * 2), Follow.y - (k * 2))" line26="            }" line27="        }" line28="" line29="        // Make all trail sprites ghost (no collisions)" line30="        for (let trail2 of trailSprites) {" line31="            trail2.setFlag(SpriteFlag.Ghost, true)" line32="        }" line33="    }" line34="}" numlines="35"></mutation></block></statement></block></xml>